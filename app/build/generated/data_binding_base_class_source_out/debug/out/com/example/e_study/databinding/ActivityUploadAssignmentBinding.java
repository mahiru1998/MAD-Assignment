// Generated by view binder compiler. Do not edit!
package com.example.e_study.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.e_study.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUploadAssignmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText Name;

  @NonNull
  public final Button button21;

  @NonNull
  public final EditText email;

  @NonNull
  public final ImageButton imageButton;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final EditText sid;

  @NonNull
  public final TextView textView;

  private ActivityUploadAssignmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText Name, @NonNull Button button21, @NonNull EditText email,
      @NonNull ImageButton imageButton, @NonNull ImageView imageView, @NonNull ImageView imageView2,
      @NonNull EditText sid, @NonNull TextView textView) {
    this.rootView = rootView;
    this.Name = Name;
    this.button21 = button21;
    this.email = email;
    this.imageButton = imageButton;
    this.imageView = imageView;
    this.imageView2 = imageView2;
    this.sid = sid;
    this.textView = textView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUploadAssignmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUploadAssignmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_upload_assignment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUploadAssignmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Name;
      EditText Name = rootView.findViewById(id);
      if (Name == null) {
        break missingId;
      }

      id = R.id.button21;
      Button button21 = rootView.findViewById(id);
      if (button21 == null) {
        break missingId;
      }

      id = R.id.email;
      EditText email = rootView.findViewById(id);
      if (email == null) {
        break missingId;
      }

      id = R.id.imageButton;
      ImageButton imageButton = rootView.findViewById(id);
      if (imageButton == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = rootView.findViewById(id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = rootView.findViewById(id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.sid;
      EditText sid = rootView.findViewById(id);
      if (sid == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = rootView.findViewById(id);
      if (textView == null) {
        break missingId;
      }

      return new ActivityUploadAssignmentBinding((ConstraintLayout) rootView, Name, button21, email,
          imageButton, imageView, imageView2, sid, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
